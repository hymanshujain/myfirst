create table emp
(empid int,empname varchar(100))

alter table emp
add desi varchar(100)

alter table emp
alter column desi varchar(150)

EXEC sp_RENAME 'emp.desi', 'desig', 'COLUMN'

EXEC sp_RENAME 'emp', 'emp1'

insert into emp1 
values (1,'himanshu','eng')

insert into emp1(empid,empname)
values (2,'Vipin')

select * into emp from emp1 where 1<>1

insert into emp select * From emp1 


alter table emp alter column empid int not null
alter table emp add primary key (empid)

alter table emp1 alter column empid int not null
alter table emp1 add constraint pk_empid primary key (empid)

alter table emp add constraint fk_empid foreign key (empid) REFERENCES emp1(empid)

alter table emp drop constraint fk_empid


select * from emp1

alter table emp1 add sal int

insert into emp1 values (3,'jeetu','eng',3000)

insert into emp1 values (4,'kartik','lead',4000)
insert into emp1 values (6,'Vishwa','dev',1000)

alter table emp1 add mgr int

select * From emp1
update emp1 set mgr=5 where empid=6
select sum(sal),avg(isnull(sal,0)),max(sal),min(sal) from emp1

select * from emp1

select avg(isnull(sal,0)) from emp1

select e2.empname,e1.empname   from emp1 e1,emp1 e2
where e1.empid=e2.mgr

select * from emp3 
select * From emp1

select empname from emp3 intersect  select empname from emp1

select empname from emp1 except select empname from emp3

select empname from emp1 except select empname from emp3

insert into emp1 values (8,'Anikumar k raj','lead',4000,3)

select * from emp1

select *, rank() over (order by sal desc) rnk,DENSE_RANK () over (order by sal desc) DR from emp1

select substring (empname,1,charindex(' ',empname)) from emp1

select left (charindex(' ',empname),empname) from emp1

select * From 
(select *,Row_Number() OVER(ORDER BY EmpId) rn from emp1) tmp
where rn%2=1

select * From 
(select *,Row_Number() OVER(ORDER BY EmpId) rn from emp1) tmp
where rn%2=0
--------------------------------------------------------------------------------------------------------

select top 10 * from temp_transindex

select * From sysobjects where type='U' and name like 'Temp%'


select @@version
SELECT system_user 

select top 10 * from Temp_TimeIndexEnt waitfor DELAY '0:0:10'

select * From sysobjects where type='V'

SELECT char(66)
select Ascii('a')

SELECT name,type_name(xtype) FROM syscolumns 
WHERE id = (SELECT id FROM sysobjects WHERE name = 'Temp_TimeIndexEnt') 

select db_name()

select getdate()

select convert(varchar,getdate(),23)

select top 10 * from Temp_TimeIndexEnt where id=3

select datediff (year,getdate(),workdate) from Temp_TimeIndexEnt where id<10

SELECT ISDATE('25')

select day(getdate())

SELECT REVERSE('SQL Tutorial');
SELECT Abs(-243.5) 
SELECT CEILING(25.75)

SELECT FLOOR(25.75)

SELECT CURRENT_TIMESTAMP; 
select getdate();

SELECT DATEDIFF(month, '2017/08/25', '2011/08/10')

select cast ('123.14' as char(9))
SELECT CAST(25.65 AS varchar)

SELECT CAST('2017-08-25' AS datetime); 

SELECT CONVERT(datetime, '2017-08-25')


SELECT COALESCE(NULL, NULL, NULL, 'W3Schools.com', NULL, 'Example.com'); 

select datediff (year,getdate(),workdate) from Temp_TimeIndexEnt where id<10

CREATE PROCEDURE test148 @id nvarchar(30)
AS
select * from Temp_TimeIndexEnt where id<@id

select * from sysobjects where type='P' and name like'test%'

sp_helptext 'test148'

Exec test148 @id= 10



create view test888 as 
select * from Temp_TimeIndexEnt where id<10

sp_helptext 'test888'

select * from sysobjects where type='V'

select * from test888
--------------------------------
select top 10 * from temp_transindex

select * From sysobjects where type='U' and name like 'Temp%'


select @@version
SELECT system_user 

select top 10 * from Temp_TimeIndexEnt waitfor DELAY '0:0:10'

select * From sysobjects where type='V'

SELECT char(66)
select Ascii('a')

SELECT name,type_name(xtype) FROM syscolumns 
WHERE id = (SELECT id FROM sysobjects WHERE name = 'Temp_TimeIndexEnt') 

select db_name()

select getdate()

select convert(varchar,getdate(),23)

select top 10 * from Temp_TimeIndexEnt where id=3

select datediff (year,getdate(),workdate) from Temp_TimeIndexEnt where id<10

SELECT ISDATE('25')

select day(getdate())

SELECT REVERSE('SQL Tutorial');
SELECT Abs(-243.5) 
SELECT CEILING(25.75)

SELECT FLOOR(25.75)

SELECT CURRENT_TIMESTAMP; 
select getdate();

SELECT DATEDIFF(month, '2017/08/25', '2011/08/10')

select cast ('123.14' as char(9))
SELECT CAST(25.65 AS varchar)

SELECT CAST('2017-08-25' AS datetime); 

SELECT CONVERT(datetime, '2017-08-25')


SELECT COALESCE(NULL, NULL, NULL, 'W3Schools.com', NULL, 'Example.com'); 

select datediff (year,getdate(),workdate) from Temp_TimeIndexEnt where id<10

CREATE PROCEDURE test148 @id nvarchar(30)
AS
select * from Temp_TimeIndexEnt where id<@id

select * from sysobjects where type='P' and name like'test%'

sp_helptext 'test148'

Exec test148 @id= 10



create view test888 as 
select * from Temp_TimeIndexEnt where id<10

sp_helptext 'test888'

select * from sysobjects where type='V'

select * from test888
-----------------------------------------------

select * From worker

select distinct department from worker
select substring(first_name,1,3) from worker

select charindex('A',First_name) from worker where first_name='Amitabh'          

 select distinct len (department) from worker

 select * from worker order by first_name asc,department desc

 select * from worker where convert(date,joining_date,23) between  '2014-02-01'
 and '2014-02-28'

 select convert(date,getdate (),23)

 select department,count(*) from worker group by department
 order by count(*) desc

 select * from title

 select * from worker wo inner join title tt 
 on wo.worker_id=tt.worker_ref_id

  select * into title1 from title

select * From title1

SELECT CURDATE();

select * from sysobjects where type='U' and name like 'Sal%'


select * from worker

(select first_name, Rank() over (order  by salary asc),salary rn from worker)

select * from worker w1 where 5=
(select count(*) from worker w2 where w1.salary<w2.salary)

select * from
(select first_name, Rank() over (order  by salary asc) rp,salary rn from worker) tmp
where rp=5

select * from worker w1 inner join worker w2
on w1.salary=w2.salary
where w1.worker_id<>w2.worker_id

select top 50 percent * from worker

select * from worker